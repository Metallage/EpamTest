pipeline{
    agent any
    stages{
        stage("LoadingSource"){
            steps{
                echo "====++++Cloning from GitHub++++===="
                powershell(returnStdout: false, script:''' 
                    $ProjectDir = "EpamTest"
                    $ProjectGit = "https://github.com/metallage/epamtest.git"

                    $ForClean = Test-Path -Path $ProjectDir
                    if($ForClean -eq "True")
                    {   
                        Write-Output "Cleaning local repo..."
                        Remove-Item -Path $ProjectDir -Recurse -Force
                        Write-Output "Clean complete"
                    }

                    git clone $ProjectGit   
                ''')


            }
        }
        stage("Preparing Cake")        {
            steps{
                echo "====++++Creating build.ps1++++===="
                powershell (returnStdout: false, script: '.\\EpamTest\\powershell\\bootstrap_cake.ps1')
            }
        }        
        stage("Build"){
            steps{
                echo "========executing Build========"
                powershell(returnStdout: false, script:  '.\\EpamTest\\\\cake\\build.ps1 -Script ".\\EpamTest\\\\cake\\build.cake"')
            }
            post{
                always{
                    echo "========always========"
                }
                success{
                    echo "========A executed successfully========"
                }
                failure{
                    echo "========A execution failed========"
                }
            }
        }
        stage("Publish test reports"){
            steps{
                nunit testResultsPattern: 'epampest\\cake\\TestResult.xml'
            }
        }
    }
    post{
        always{
            echo "========always========"
        }
        success{
            echo "========pipeline executed successfully ========"
        }
        failure{
            echo "========pipeline execution failed========"
        }
    }
}